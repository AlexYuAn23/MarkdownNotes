package java14;


class Duck {
    private String name;
    private int count = 1;
    private boolean flag;

    public synchronized void put(String name) {
        while (flag)
            try {wait();} catch (InterruptedException e) {}
        this.name = name + count;
        count++;
        System.out.println(Thread.currentThread().getName() + " ... " + this.name);
        flag = true;
        notifyAll();
    }

    public synchronized void get() {
        while (!flag)
            try {wait();} catch (InterruptedException e) {}
        System.out.println(Thread.currentThread().getName() + " ...... " + this.name);
        flag = false;
        notifyAll();
    }
}


class Producer implements Runnable {
    private Duck d;

    public Producer(Duck d) {
        this.d = d;
    }

    @Override
    public void run() {
        while (true) {
              d.put("Duck");
        }
    }
}


class Consumer implements Runnable {
    private Duck d;

    public Consumer(Duck d) {
        this.d = d;
    }

    @Override
    public void run() {
        while (true) {
            d.get();
        }
    }
}


public class ProducerConsumerDemo {
    public static void main(String[] args) {
        Duck d = new Duck();

        Producer p = new Producer(d);
        Consumer c = new Consumer(d);

        Thread t0 = new Thread(p);
        Thread t1 = new Thread(p);
        Thread t2 = new Thread(c);
        Thread t3 = new Thread(c);

        t0.start();
        t1.start();
        t2.start();
        t3.start();
    }

}
